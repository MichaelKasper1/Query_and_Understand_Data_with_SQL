Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:

	### Solution Code
	select count(*) from tables_names
	###

i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table =10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

	### Solution Code
	select count(distinct (foreign_or_primary_keys)) from table_names
	###

i. Business = id 10000
ii. Hours = business_id 1562
iii. Category = business_id 2643
iv. Attribute = business_id 1115
v. Review = id 10000, business_id 8090, user_id 9581
vi. Checkin = business_id 493
vii. Photo = id 10000, business_id 6493
viii. Tip = business_id 3979, user_id 537
ix. User = id 10000
x. Friend = user_id 11
xi. Elite_years = user_id 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	SQL code used to arrive at answer:
	select count(*) from User
		where id is NULL OR
			  name is NULL OR
			  review_count IS NULL OR
			  yelping_since IS NULL OR
			  useful IS NULL OR 
			  funny IS NULL OR 
			  cool IS NULL OR 
			  fans IS NULL OR 
			  average_stars IS NULL OR 
			  compliment_hot IS NULL OR 
			  compliment_more IS NULL OR 
			  compliment_profile IS NULL OR 
			  compliment_cute IS NULL OR 
			  compliment_list IS NULL OR 
			  compliment_note IS NULL OR 
			  compliment_plain IS NULL OR 
			  compliment_cool IS NULL OR 
			  compliment_funny IS NULL OR 
			  compliment_writer IS NULL OR 
			  compliment_photos IS NULL
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	### Solution Code
	select min(Column_name), max(Column_name), avg(Column_name) from Table_name
	###

	i. Table: Review, Column: Stars
	
		min:1		max:5		avg:3.71
		
	
	ii. Table: Business, Column: Stars
	
		min: 1		max:5   	avg: 3.65
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.1
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.94
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.30
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	select city, sum(review_count)	as reviews
	from business
	group by city
	order by reviews desc

	Copy and Paste the Result Below:
+-----------------+---------+
| city            | reviews |
+-----------------+---------+
| Las Vegas       |   82854 |
| Phoenix         |   34503 |
| Toronto         |   24113 |
| Scottsdale      |   20614 |
| Charlotte       |   12523 |
| Henderson       |   10871 |
| Tempe           |   10504 |
| Pittsburgh      |    9798 |
| Montréal        |    9448 |
| Chandler        |    8112 |
| Mesa            |    6875 |
| Gilbert         |    6380 |
| Cleveland       |    5593 |
| Madison         |    5265 |
| Glendale        |    4406 |
| Mississauga     |    3814 |
| Edinburgh       |    2792 |
| Peoria          |    2624 |
| North Las Vegas |    2438 |
| Markham         |    2352 |
| Champaign       |    2029 |
| Stuttgart       |    1849 |
| Surprise        |    1520 |
| Lakewood        |    1465 |
| Goodyear        |    1155 |
+-----------------+---------+
(Output limit exceeded, 25 of 362 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
select stars, 
sum(review_count)
from business
where city = 'Avon'
group by stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+-------------------+
| stars | sum(review_count) |
+-------+-------------------+
|   1.5 |                10 |
|   2.5 |                 6 |
|   3.5 |                88 |
|   4.0 |                21 |
|   4.5 |                31 |
|   5.0 |                 3 |
+-------+-------------------+

ii. Beachwood

SQL code used to arrive at answer:
select stars, 
sum(review_count)
from business
where city = 'Beachwood'
group by stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+-------------------+
| stars | sum(review_count) |
+-------+-------------------+
|   2.0 |                 8 |
|   2.5 |                 3 |
|   3.0 |                11 |
|   3.5 |                 6 |
|   4.0 |                69 |
|   4.5 |                17 |
|   5.0 |                23 |
+-------+-------------------+		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	select id, name, review_count from user
	order by review_count desc
	limit 3
		
	Copy and Paste the Result Below:
+------------------------+--------+--------------+
| id                     | name   | review_count |
+------------------------+--------+--------------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
| -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
+------------------------+--------+--------------+
		


8. Does posting more reviews correlate with more fans?
	No. Posting more reviews does not correlate with more fans.

	Please explain your findings and interpretation of the results:
	Using a quick order by, it does not seem as though having more fans means you have a higher review count. You can see this simply by eyeballing the table and seeing that review_count numbers does not increase at a similar rate as fans. There may be a small correlation, but it is not obvious.

select name, review_count, fans
from user
order by fans desc
+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Amy       |          609 |  503 |
| Mimi      |          968 |  497 |
| Harald    |         1153 |  311 |
| Gerald    |         2000 |  253 |
| Christine |          930 |  173 |
| Lisa      |          813 |  159 |
| Cat       |          377 |  133 |
| William   |         1215 |  126 |
| Fran      |          862 |  124 |
| Lissa     |          834 |  120 |
| Mark      |          861 |  115 |
| Tiffany   |          408 |  111 |
| bernice   |          255 |  105 |
| Roanna    |         1039 |  104 |
| Angela    |          694 |  101 |
| .Hon      |         1246 |  101 |
| Ben       |          307 |   96 |
| Linda     |          584 |   89 |
| Christina |          842 |   85 |
| Jessica   |          220 |   84 |
| Greg      |          408 |   81 |
| Nieves    |          178 |   80 |
| Sui       |          754 |   78 |
| Yuri      |         1339 |   76 |
| Nicole    |          161 |   73 |
+-----------+--------------+------+

9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
	There are 1780 loves and only 232 hates.
	
	SQL code used to arrive at answer:
	select count(*)
	where text like'%hate%'
	###
	select count(*)
	where text like'%love%'
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	select name, fans
	from user
	order by fans desc
	limit 10
	
	Copy and Paste the Result Below:
+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

	
i. Do the two groups you chose to analyze have a different distribution of hours?
Yes. All 2-3 star shopping hour ranges are from 8:00 to 22:00. The hour ranges of of 4-5 star shopping is 8:00 to either 16:30 or 17:00.

ii. Do the two groups you chose to analyze have a different number of reviews?
On average, the 4-5 star shopping has a much higher number of reviews near 30. The range is 4-32. All 2-3 star shopping has 6 reviews.
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
In Las Vegas, it seems that higher rated shopping centers are the ones that close before the middle of the night. These are also ones that get more reviews.

SQL code used for analysis:

select name, category, postal_code, hours, review_count, city,
case
    when stars between 2 and 3 then '2-3 stars'
    when stars between 4 and 5 then '4-5 stars'
end as rating
from business b

inner join hours on b.id = hours.business_id
inner join category on category.business_id = b.id
where city = 'Las Vegas' and category = 'Shopping'
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
    There are more shopping location in Las Vegas at this time that are in the database at 351 for open centers and 144 for closed centers.
    The closed shopping locations have slightly lower average stars.      
         
ii. Difference 2:
     The closed shopping locations have a lower number of average review counts.   
         
         
SQL code used for analysis:
select count(distinct id), count(distinct city), is_open, avg(stars), avg(review_count), count(review_count)
from business
group by is_open
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
         I want to see if there is a correlation between the average length of a business name and the number of stars it has.
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
          I will need data from the business table only. I will need business name which is a character variable. I will need stars which is a float. I am going to group by the counts of business name in 2 groups for above average and below average. I am using 18.25 because I found that the average length of names is 18.25 characters long. A bit of exploratory data analysis was required to get to this.

          With the output, We do see that 4.0 and above star businesses all have average name lengths that are below the entire database name length average. I would say that if you want to be a top 4.0+ star business, think of a catchy short name. Especially with 5.0 star businesses having an average name with only 7 characters which was the lowest number of any other star name length average.

iii. Output of your finished dataset:
+-------+--------------+--------------------+
| stars | length(name) | above_or_below_avg |
+-------+--------------+--------------------+
|   1.0 |           13 | below_avg          |
|   1.5 |           49 | above_avg          |
|   2.0 |           14 | below_avg          |
|   2.5 |           21 | above_avg          |
|   3.0 |           16 | below_avg          |
|   3.5 |           19 | above_avg          |
|   4.0 |            8 | below_avg          |
|   4.5 |           17 | below_avg          |
|   5.0 |            7 | below_avg          |
+-------+--------------+--------------------+
         
         
iv. Provide the SQL code you used to create your final dataset:
select stars, length(name),
case
    when length(name) < 18.25 then 'below_avg'
    when length(name) > 18.25 then 'above_avg'
end as above_or_below_avg
from business
group by stars